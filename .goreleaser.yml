project_name: gitclean

before:
  hooks:
    - go mod tidy
    - go generate ./...

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - "386"
      - amd64
      - arm
      - arm64
    ignore:
      - goos: darwin
        goarch: "386"
      - goos: windows
        goarch: arm
      - goos: windows
        goarch: arm64
    main: ./main.go
    binary: gitclean
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}}

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
    - goos: windows
      format: zip

checksum:
  name_template: 'checksums.txt'

snapshot:
  name_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'

brews:
  - name: gitclean
    description: "A tool to clean up local git branches that have already been merged or squashed into a target branch"
    homepage: "https://github.com/Jossec101/gitclean"
    license: "MIT"
    
    # Repository configuration - using the same repository
    repository:
      owner: Jossec101
      name: gitclean
      branch: main
    
    # Git author used to commit to the repository.
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com
    
    # The project name and current git tag are used in the format string.
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    
    # Setting this will prevent goreleaser to actually try to commit the updated
    # formula - instead, the formula file will be stored on the dist folder only,
    # leaving the responsibility of publishing it to the user.
    # If set to auto, the release will not be uploaded to the homebrew tap
    # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1
    # Default is false.
    skip_upload: auto
    
    # Dependencies of your package
    dependencies:
      - name: git
      - name: gh
    
    # So you can `brew test` your formula.
    test: |
      system "#{bin}/gitclean", "--help"
    
    # Custom install script for homebrew.
    install: |
      bin.install "gitclean"

release:
  # If set to auto, will mark the release as not ready for production
  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
  # If set to true, will mark the release as not ready for production.
  prerelease: auto
  
  # You can change the name of the release.
  name_template: "{{.ProjectName}}-v{{.Version}}"
